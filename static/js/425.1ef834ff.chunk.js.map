{"version":3,"file":"static/js/425.1ef834ff.chunk.js","mappings":"oRAEaA,EAAWC,EAAAA,GAAAA,GAAH,4PAaRC,EAAUD,EAAAA,GAAAA,IAAH,0G,mBC+CpB,EAvDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAUL,OANA,mCAAC,qGACmBQ,EAAAA,EAAAA,IAAYR,GAD/B,OACOS,EADP,OAECL,EAAYK,EAAIC,KAAKC,MACrBL,GAAa,GAHd,2CAAD,uDAMO,WACN,CACF,GAAE,CAACN,KAGF,gCACGK,IAAa,SAACO,EAAA,EAAD,KACZP,IACA,SAACR,EAAD,UACGM,EAASU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpC,OACE,0BACGA,GACC,gBACEC,IAAK,kCAAoCD,EACzCE,IAAKH,EACLI,MAAO,OAGT,SAACrB,EAAD,wBAEF,wBACC,uBAAIiB,OAEL,0BACE,uCADF,KACuBD,EADvB,UAbOD,EAkBZ,OAGHT,GAAiC,IAApBF,EAASkB,SACtB,6DAIP,C,sDC1CD,IAfe,WACb,OACI,SAAC,KAAD,CACEC,OAAO,MACPF,MAAM,MACNG,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGhB,C,mMCdKC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,WAAZ,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCrC,GAAhC,gGAEoB+B,EAAAA,EAAAA,IAAA,gBAAmB/B,GAAW,CACnDgC,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBT,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGT,EAFH,yBAWIA,GAXJ,gCAaHC,QAAQC,IAAI,WAAZ,MAbG,gFAiBA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BR,GAA3B,gGAEoB+B,EAAAA,EAAAA,IAAA,gBAAmB/B,EAAnB,YAAsC,CAC3DgC,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8B5C,GAA9B,gGAEoB+B,EAAAA,EAAAA,IAAA,gBAAmB/B,EAAnB,YAAsC,CAC3DgC,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVK,KAAM,KANP,cAEGT,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,WAAZ,MAXG,gFA5DPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.styles.js","components/Cast/Cast.js","components/Loader/Loader.js","services/apiMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto;\n  padding: 10px;\n  list-style: none;\n  img {\n    padding: 10px;\n  }\n`;\n\nexport const NoImage = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: #727272;\n  margin: 10px;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { castRequest } from '../../services/apiMovies';\nimport { CastList, NoImage } from './Cast.styles';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function castInfo() {\n      const res = await castRequest(movieId);\n      setCastInfo(res.data.cast);\n      setIsLoading(false);\n    })();\n\n    return () => {\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <CastList>\n          {castInfo.map(({ id, character, name, profile_path }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                    alt={name}\n                    width={200}\n                  ></img>\n                ) : (\n                  <NoImage>No Image</NoImage>\n                )}\n                <p>\n                 <b>{name}</b>\n                </p>\n                <p>\n                  <b>Character: </b>( {character} )\n                </p>\n              </li>\n            );\n          })}\n        </CastList>\n      )}\n      {!isLoading && castInfo.length === 0 && (\n        <div>No information for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#69709c\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n  );\n};\n\nexport default Loader;","import axios from 'axios';\n\nconst KEY = 'f80c5afd8737d8b54483408440a37aea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}"],"names":["CastList","styled","NoImage","movieId","useParams","useState","castInfo","setCastInfo","isLoading","setIsLoading","useEffect","castRequest","res","data","cast","Loader","map","id","character","name","profile_path","src","alt","width","length","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","language","moviesQueryRequest","search","query","include_adult","page","reviewsRequest"],"sourceRoot":""}