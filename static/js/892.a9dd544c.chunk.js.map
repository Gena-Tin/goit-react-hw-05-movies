{"version":3,"file":"static/js/892.a9dd544c.chunk.js","mappings":"sKAkBA,IAfe,WACb,OACI,SAAC,KAAD,CACEA,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGhB,C,wJCdYC,E,QAAkBC,GAAAA,GAAH,mL,mBCiD5B,EA3CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAUL,OANA,mCAAC,qGACmBQ,EAAAA,EAAAA,IAAeR,GADlC,OACOS,EADP,OAECL,EAAeK,EAAIC,KAAKC,SACxBL,GAAa,GAHd,2CAAD,uDAMO,WACN,CACF,GAAE,CAACN,KAGF,gCACGK,IAAa,SAACO,EAAA,EAAD,KACZP,IACA,SAACP,EAAD,UACGK,EAAYU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,0BACE,oCACCD,MAEH,uBAAIC,MALGF,EADM,OAWnBT,GAAoC,IAAvBF,EAAYc,SACzB,6DAIP,C,mMC/CKC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sBAAiC,CACtDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,IAAI,WAAZ,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgC1B,GAAhC,gGAEoBoB,EAAAA,EAAAA,IAAA,gBAAmBpB,GAAW,CACnDqB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBT,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGT,EAFH,yBAWIA,GAXJ,gCAaHC,QAAQC,IAAI,WAAZ,MAbG,gFAiBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2BjC,GAA3B,gGAEoBoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAAsC,CAC3DqB,OAAQ,CACNC,QAASJ,EACTS,SAAU,WALX,cAEGJ,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,IAAI,WAAZ,MAVG,gFAcA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,gGAEoBoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAAsC,CAC3DqB,OAAQ,CACNC,QAASJ,EACTS,SAAU,QACVK,KAAM,KANP,cAEGT,EAFH,yBASIA,GATJ,gCAWHC,QAAQC,IAAI,WAAZ,MAXG,gFA5DPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Loader/Loader.js","components/Reviews/Reviews.styles.js","components/Reviews/Reviews.js","services/apiMovies.js"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#69709c\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n  );\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const ReviewsInfoList = styled.ul`\n  padding: 20px 45px;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  p {\n    margin-bottom: 10px;\n  }\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { reviewsRequest } from '../../services/apiMovies';\nimport { ReviewsInfoList } from './Reviews.styles';\nimport Loader from '../Loader/Loader';\n\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    (async function reviewsInfo() {\n      const res = await reviewsRequest(movieId);\n      setReviewsInfo(res.data.results);\n      setIsLoading(false);\n    })();\n\n    return () => {\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <ReviewsInfoList>\n          {reviewsInfo.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author: </b>\n                {author}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsInfoList>\n      )}\n      {!isLoading && reviewsInfo.length === 0 && (\n        <div>No information for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = 'f80c5afd8737d8b54483408440a37aea';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}\n\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error = ', error);\n  }\n}"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ReviewsInfoList","styled","movieId","useParams","useState","reviewsInfo","setReviewsInfo","isLoading","setIsLoading","useEffect","reviewsRequest","res","data","results","Loader","map","id","author","content","length","KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","language","moviesQueryRequest","search","query","include_adult","page","castRequest"],"sourceRoot":""}